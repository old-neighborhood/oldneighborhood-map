#server config
server.port=8085
server.context-path=/common

#thymepeaf config
spring.thymeleaf.cache=false

#plus domain avoid conficts
spring.jmx.default-domain=project-common

#fileSize config - > config
#spring.http.multipart.maxFileSize=5Mb
#spring.http.multipart.maxRequestSize=20Mb
#整合了文件上传下载 - 文件导入 - 以及IP定位地址等

#路径配置
web.url=http://111.231.107.63:${server.port}
web.upload-image=/home/ubuntu/image
web.upload-file=/home/ubuntu/file
web.upload-excel=/home/ubuntu/excel
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,\
classpath:/static/,classpath:/public/,file:${web.upload-file},file:${web.upload-image},file:${web.upload-excel}

#eureka config
eureka.instance.prefer-ip-address=true
eureka.instance.hostname= ${spring.cloud.client.ipAddress}
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}
spring.application.name=neighborhood-common-service
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://111.231.107.63:8761/eureka/eureka/
spring.session.store-type=none
#部署之后使用
#eureka.instance.ip-address=111.231.107.63

#mapAPI config
amap.api.key=99c8e5ec189df6e1040579b90db55758
amap.api.url=http://restapi.amap.com/v3
amap.api.url2=http://restapi.amap.com/v4

#JavaMailSender
spring.mail.host=smtp.yeah.net
spring.mail.username=ren_blue@yeah.net
spring.mail.password=yeahnet110
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

#druid config
spring.datasource.type= com.alibaba.druid.pool.DruidAbstractDataSource

#小心复制时候的空格，尤其username与password
druid.url=jdbc:mysql://localhost:3306/oldneighborhood
druid.username=root
druid.password=123456
druid.driverClassName=com.mysql.jdbc.Driver
#连接池的配置信息    
druid.initialSize=5
druid.minIdle=5
druid.maxActive=20
druid.maxWait=60000
druid.timeBetweenEvictionRunsMillis=60000
druid.minEvictableIdleTimeMillis=300000
druid.validationQuery=SELECT 1 FROM DUAL
druid.testWhileIdle=true
druid.testOnBorrow=false
druid.testOnReturn=false
druid.poolPreparedStatements=true
druid.maxPoolPreparedStatementPerConnectionSize=20
druid.filters=stat,wall,log4j
druid.logSlowSql=true

#jpa config
#hibernate提供了根据实体类自动维护数据库表结构的功能，可通过spring.jpa.hibernate.ddl-auto来配置，有下列可选项：
#1、create：启动时删除上一次生成的表，并根据实体类生成表，表中数据会被清空。
#2、create-drop：启动时根据实体类生成表，sessionFactory关闭时表会被删除。
#3、update：启动时会根据实体类生成表，当实体类属性变动的时候，表结构也会更新，在初期开发阶段使用此选项。
#4、validate：启动时验证实体类和数据表是否一致，在我们数据结构稳定时采用此选项。
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql用来设置hibernate操作的时候在控制台显示其真实的sql语句。
spring.jpa.show-sql=true
#告诉jpa使用的数据库是mysql
spring.jpa.database=mysql
#配置jpa使用哪种数据库的方言
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl